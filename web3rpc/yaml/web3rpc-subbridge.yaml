openapi: 3.0.2
info:
  title: web3rpc
  version: 0.9.0
  contact:
    name: API support
    url: https://forum.klaytn.foundation/
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
x-tagGroups:
  - name: namespaces
    tags:
      - subbridge
servers:
  - url: http://localhost:8551
  - url: https://api.baobab.klaytn.net:8651
  - url: https://public-en-cypress.klaytn.net
paths:
  /subbridge/addPeer:
    post:
      summary: subbridge_addPeer
      tags:
        - subbridge
      operationId: addPeer
      description: |
        Returns true if adding a mainbridge peer is done successfully.

        The addPeer method adds a new remote node to the peer list. The node will try to maintain connectivity to these nodes at all times, reconnecting every once in a while if the remote connection goes down.

        The method accepts a single argument, the kni URL of the remote peer to start tracking and returns a BOOL indicating whether the peer was accepted for tracking or some error occurred.

        **JSONRPC:** `subbridge_addPeer`
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - $ref: '#/components/schemas/AddPeerReq'
      responses:
        '200':
          description: true if the peer was accepted, false otherwise.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - $ref: '#/components/schemas/AddPeerResp'
      x-codeSamples:
        - lang: curl
          label: Curl
          source: |
            curl -X 'POST' \
              'https://api.baobab.klaytn.net:8651/subbridge/addPeer' \
              -H 'accept: application/json' \
              -H 'Content-Type: application/json' \
              -d '{
              "method": "subbridge_addPeer",
              "id": 1,
              "jsonrpc": "2.0",
              "params": ["kni://a979fb575495b8d6db44f750317d0f4622bf4c2aa3365d6af7c284339968eef29b69ad0dce72a4d8db5ebb4968de0e3bec910127f134779fbcb0cb6d3331163c@10.0.0.1:50505"]
            }'
  /subbridge/anchoring:
    post:
      summary: subbridge_anchoring
      tags:
        - subbridge
      operationId: anchoring
      description: |
        The subbridge_anchoring can enable/disable the anchoring feature of the service chain.

        **JSONRPC:** `subbridge_anchoring`
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - $ref: '#/components/schemas/AnchoringReq'
      responses:
        '200':
          description: true if the anchoring was enabled, false otherwise.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - $ref: '#/components/schemas/AnchoringResp'
      x-codeSamples:
        - lang: curl
          label: Curl
          source: |
            curl -X 'POST' \
              'https://api.baobab.klaytn.net:8651/subbridge/anchoring' \
              -H 'accept: application/json' \
              -H 'Content-Type: application/json' \
              -d '{
              "method": "subbridge_anchoring",
              "id": 1,
              "jsonrpc": "2.0",
              "params": [true]
            }'
  /subbridge/convertRequestTxHashToHandleTxHash:
    post:
      summary: subbridge_convertRequestTxHashToHandleTxHash
      tags:
        - subbridge
      operationId: convertRequestTxHashToHandleTxHash
      description: |
        The subbridge_convertRequestTxHashToHandleTxHash returns the corresponding "handle value transfer transaction" hash in the opposite chain for the given "request value transfer transaction" hash. "Request value transfer transaction" is a transaction initiated by a user, requesting a cross-chain value transfer. "Handle value transfer transaction" is the transaction created by the sub-bridge to handle the value transfer request from the user.

        **JSONRPC:** `subbridge_convertRequestTxHashToHandleTxHash`
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - $ref: '#/components/schemas/ConvertRequestTxHashToHandleTxHashReq'
      responses:
        '200':
          description: Hash of a "handle value transfer" transaction. zero hash means there is no corresponding "handle value transfer" transaction.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - $ref: '#/components/schemas/ConvertRequestTxHashToHandleTxHashResp'
      x-codeSamples:
        - lang: curl
          label: Curl
          source: |
            curl -X 'POST' \
              'https://api.baobab.klaytn.net:8651/subbridge/convertRequestTxHashToHandleTxHash' \
              -H 'accept: application/json' \
              -H 'Content-Type: application/json' \
              -d '{
              "method": "subbridge_convertRequestTxHashToHandleTxHash",
              "id": 1,
              "jsonrpc": "2.0",
              "params": ["0xc585cfd1e7047b4faae69e62e77db192d8a339701b40d6ab4adb58453b934bec"]
            }'
  /subbridge/deployBridge:
    post:
      summary: subbridge_deployBridge
      tags:
        - subbridge
      operationId: deployBridge
      description: |
        The subbridge_deployBridge deploys a bridge contract to the parent and child chains and returns the addresses of deployed bridge contracts. This method also registers the bridge contracts with the sub-bridge.

        **JSONRPC:** `subbridge_deployBridge`
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - $ref: '#/components/schemas/SubbridgeDeployBridgeReq'
      responses:
        '200':
          description: Returns the addresses of deployed bridge contracts.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - $ref: '#/components/schemas/SubbridgeDeployBridgeResp'
      x-codeSamples:
        - lang: curl
          label: Curl
          source: |
            curl -X 'POST' \
              'https://api.baobab.klaytn.net:8651/subbridge/deployBridge' \
              -H 'accept: application/json' \
              -H 'Content-Type: application/json' \
              -d '{
              "method": "subbridge_deployBridge",
              "id": 1,
              "jsonrpc": "2.0",
              "params": []
            }'
  /subbridge/deregisterBridge:
    post:
      summary: subbridge_deregisterBridge
      tags:
        - subbridge
      operationId: deregisterBridge
      description: |
        The subbridge.deregisterBridge deregisters already registered bridge contracts in the parent/child chain.

        **JSONRPC:** `subbridge_deregisterBridge`
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - $ref: '#/components/schemas/SubbridgeDeregisterBridgeReq'
      responses:
        '200':
          description: The subbridge.deregisterBridge deregisters already registered bridge contracts in the parent/child chain.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - $ref: '#/components/schemas/SubbridgeDeregisterBridgeResp'
      x-codeSamples:
        - lang: curl
          label: Curl
          source: |
            curl -X 'POST' \
              'https://api.baobab.klaytn.net:8651/subbridge/deregisterBridge' \
              -H 'accept: application/json' \
              -H 'Content-Type: application/json' \
              -d '{
              "method": "subbridge_deregisterBridge",
              "id": 1,
              "jsonrpc": "2.0",
              "params": ["0x87d6b9c567e5b84cd00e03bfbe6d20d88209c33a", "0x23dab942822021bbd6d551ef51003208924877e4"]
            }'
  /subbridge/deregisterToken:
    post:
      summary: subbridge_deregisterToken
      tags:
        - subbridge
      operationId: deregisterToken
      description: |
        The subbridge_deregisterBridge deregisters already registered token pair from the bridge contracts.

        **JSONRPC:** `subbridge_deregisterToken`
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - $ref: '#/components/schemas/SubbridgeDeregisterTokenReq'
      responses:
        '200':
          description: null if the deregistration succeeds, Error object otherwise.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - $ref: '#/components/schemas/SubbridgeDeregisterTokenResp'
      x-codeSamples:
        - lang: curl
          label: Curl
          source: |
            curl -X 'POST' \
              'https://api.baobab.klaytn.net:8651/subbridge/deregisterToken' \
              -H 'accept: application/json' \
              -H 'Content-Type: application/json' \
              -d '{
              "method": "subbridge_deregisterToken",
              "id": 1,
              "jsonrpc": "2.0",
              "params": ["0x87d6b9c567e5b84cd00e03bfbe6d20d88209c33a", "0x23dab942822021bbd6d551ef51003208924877e4","0xA4b0c6e12346426a09FaD70dAE0651E6Dbdd5198","0x865Cca53828C91663BFf0Ca9808827Bac552BAec"]
            }'
  /subbridge/getBridgeInFormation:
    post:
      summary: subbridge_getBridgeInformation
      tags:
        - subbridge
      operationId: getBridgeInformation
      description: |
        The subbridge_getBridgeInformation returns the information of the given bridge contract.

        **JSONRPC:** `subbridge_getBridgeInformation`
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - $ref: '#/components/schemas/GetBridgeInformationReq'
      responses:
        '200':
          description: returns the information of the given bridge contract.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - $ref: '#/components/schemas/GetBridgeInformationResp'
      x-codeSamples:
        - lang: curl
          label: Curl
          source: |
            curl -X 'POST' \
              'https://api.baobab.klaytn.net:8651/subbridge/getBridgeInformation' \
              -H 'accept: application/json' \
              -H 'Content-Type: application/json' \
              -d '{
              "method": "subbridge_getBridgeInformation",
              "id": 1,
              "jsonrpc": "2.0",
              "params": ["0x27caeba831d98b5fbb1d81ce0ed20801702f443a"]
            }'
  /subbridge/getReceiptFromParentChain:
    post:
      summary: subbridge_getReceiptFromParentChain
      tags:
        - subbridge
      operationId: getReceiptFromParentChain
      description: |
        The subbridge_getReceiptFromParentChain returns the receipt of the anchoring transaction.

        **JSONRPC:** `subbridge_getReceiptFromParentChain`
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - $ref: '#/components/schemas/SubbridgeGetReceiptFromParentChainReq'
      responses:
        '200':
          description: Object - A transaction receipt object, or null when no receipt was found.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - $ref: '#/components/schemas/SubbridgeGetReceiptFromParentChainResp'
      x-codeSamples:
        - lang: curl
          label: Curl
          source: |
            curl -X 'POST' \
              'https://api.baobab.klaytn.net:8651/subbridge/getReceiptFromParentChain' \
              -H 'accept: application/json' \
              -H 'Content-Type: application/json' \
              -d '{
              "method": "subbridge_getReceiptFromParentChain",
              "id": 1,
              "jsonrpc": "2.0",
              "params": ["0x4f300d6574e71d7940c88fe08f27d9ac45cbc7b81d45c17e848d3772f64377b5"]
            }'
  /subbridge/listBridge:
    post:
      summary: subbridge_listBridge
      tags:
        - subbridge
      operationId: listBridge
      description: |
        The subbridge_listBridge returns the list of all bridge contract pairs that are registered (stored) in the sub-bridge.

        **JSONRPC:** `subbridge_listBridge`
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - $ref: '#/components/schemas/ListBridgeReq'
      responses:
        '200':
          description: returns the list of all bridge contract pairs that are registered (stored) in the sub-bridge.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - $ref: '#/components/schemas/ListBridgeResp'
      x-codeSamples:
        - lang: curl
          label: Curl
          source: |
            curl -X 'POST' \
              'https://api.baobab.klaytn.net:8651/subbridge/listBridge' \
              -H 'accept: application/json' \
              -H 'Content-Type: application/json' \
              -d '{
              "method": "subbridge_listBridge",
              "id": 1,
              "jsonrpc": "2.0",
              "params": []
            }'
  /subbridge/nodeInfo:
    post:
      summary: subbridge_nodeInfo
      tags:
        - subbridge
      operationId: nodeInfo
      description: |
        Returns bridge node information including the KNI (Klaytn Network Identifier) of the node. A subbridge node can connect to a mainbridge node via the KNI.

        **JSONRPC:** `subbridge_nodeInfo`
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - $ref: '#/components/schemas/NodeInfoReq'
      responses:
        '200':
          description: the bridge node information.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - $ref: '#/components/schemas/NodeInfoResp'
      x-codeSamples:
        - lang: curl
          label: Curl
          source: |
            curl -X 'POST' \
              'https://api.baobab.klaytn.net:8651/subbridge/nodeInfo' \
              -H 'accept: application/json' \
              -H 'Content-Type: application/json' \
              -d '{
              "method": "subbridge_nodeInfo",
              "id": 1,
              "jsonrpc": "2.0",
              "params": []
            }'
  /subbridge/registerBridge:
    post:
      summary: subbridge_registerBridge
      tags:
        - subbridge
      operationId: registerBridge
      description: |
        The subbridge_registerBridge registers already deployed bridge contracts in the parent and child chains.

        **JSONRPC:** `subbridge_registerBridge`
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - $ref: '#/components/schemas/SubbridgeRegisterBridgeReq'
      responses:
        '200':
          description: The subbridge_registerBridge registers already deployed bridge contracts in the parent and child chains.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - $ref: '#/components/schemas/SubbridgeRegisterBridgeResp'
      x-codeSamples:
        - lang: curl
          label: Curl
          source: |
            curl -X 'POST' \
              'https://api.baobab.klaytn.net:8651/subbridge/registerBridge' \
              -H 'accept: application/json' \
              -H 'Content-Type: application/json' \
              -d '{
              "method": "subbridge_registerBridge",
              "id": 1,
              "jsonrpc": "2.0",
              "params": ["0x87d6b9c567e5b84cd00e03bfbe6d20d88209c33a", "0x23dab942822021bbd6d551ef51003208924877e4"]
            }'
  /subbridge/registerToken:
    post:
      summary: subbridge_registerToken
      tags:
        - subbridge
      operationId: registerToken
      description: |
        The subbridge_registerToken registers a pair of ERC-20 or 721 tokens with the bridge contracts.

        **JSONRPC:** `subbridge_registerToken`
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - $ref: '#/components/schemas/SubbridgeRegisterTokenReq'
      responses:
        '200':
          description: The subbridge_registerToken registers a pair of ERC-20 or 721 tokens with the bridge contracts.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - $ref: '#/components/schemas/SubbridgeRegisterTokenResp'
      x-codeSamples:
        - lang: curl
          label: Curl
          source: |
            curl -X 'POST' \
              'https://api.baobab.klaytn.net:8651/subbridge/registerToken' \
              -H 'accept: application/json' \
              -H 'Content-Type: application/json' \
              -d '{
              "method": "subbridge_registerToken",
              "id": 1,
              "jsonrpc": "2.0",
              "params": ["0x87d6b9c567e5b84cd00e03bfbe6d20d88209c33a", "0x23dab942822021bbd6d551ef51003208924877e4","0xA4b0c6e12346426a09FaD70dAE0651E6Dbdd5198","0x865Cca53828C91663BFf0Ca9808827Bac552BAec"]
            }'
  /subbridge/removePeer:
    post:
      summary: subbridge_removePeer
      tags:
        - subbridge
      operationId: removePeer
      description: |
        Returns true if removing the peer is done successfully.

        The removePeer method disconnects and removes the remote node in the list of tracked static nodes. The method accepts a single argument, the kni URL of the remote peer to start tracking and returns a BOOL indicating whether the peer was accepted for tracking or some error occurred.

        **JSONRPC:** `subbridge_removePeer`
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - $ref: '#/components/schemas/RemovePeerReq'
      responses:
        '200':
          description: true if the peer was removed, false otherwise.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - $ref: '#/components/schemas/RemovePeerResp'
      x-codeSamples:
        - lang: curl
          label: Curl
          source: |
            curl -X 'POST' \
              'https://api.baobab.klaytn.net:8651/subbridge/removePeer' \
              -H 'accept: application/json' \
              -H 'Content-Type: application/json' \
              -d '{
              "method": "subbridge_removePeer",
              "id": 1,
              "jsonrpc": "2.0",
              "params": ["kni://a979fb575495b8d6db44f750317d0f4622bf4c2aa3365d6af7c284339968eef29b69ad0dce72a4d8db5ebb4968de0e3bec910127f134779fbcb0cb6d3331163c@10.0.0.1:50505"]
            }'
  /subbridge/subscribeBridge:
    post:
      summary: subbridge_subscribeBridge
      tags:
        - subbridge
      operationId: subscribeBridge
      description: |
        The subbridge_subscribeBridge subscribes to the registered bridge contracts in the parent and child chains. If the sub-bridge node is subscribed to the bridge contract pair, cross-chain value-transfer requests are handled automatically by the sub-bridge.

        **JSONRPC:** `subbridge_subscribeBridge`
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - $ref: '#/components/schemas/SubbridgeSubscribeBridgeReq'
      responses:
        '200':
          description: The subbridge_subscribeBridge subscribes to the registered bridge contracts in the parent and child chains.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - $ref: '#/components/schemas/SubbridgeSubscribeBridgeResp'
      x-codeSamples:
        - lang: curl
          label: Curl
          source: |
            curl -X 'POST' \
              'https://api.baobab.klaytn.net:8651/subbridge/subscribeBridge' \
              -H 'accept: application/json' \
              -H 'Content-Type: application/json' \
              -d '{
              "method": "subbridge_subscribeBridge",
              "id": 1,
              "jsonrpc": "2.0",
              "params": ["0x87d6b9c567e5b84cd00e03bfbe6d20d88209c33a", "0x23dab942822021bbd6d551ef51003208924877e4"]
            }'
  /subbridge/txPending:
    post:
      summary: subbridge_txPending
      tags:
        - subbridge
      operationId: txPending
      description: |
        The subbridge_txPending returns the list of pending transactions in the bridge transaction pool.

        **JSONRPC:** `subbridge_txPending`
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - $ref: '#/components/schemas/SubbridgeTxPendingReq'
      responses:
        '200':
          description: List of pending transactions in the bridge transaction pool.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - $ref: '#/components/schemas/SubbridgeTxPendingResp'
      x-codeSamples:
        - lang: curl
          label: Curl
          source: |
            curl -X 'POST' \
              'https://api.baobab.klaytn.net:8651/subbridge/txPending' \
              -H 'accept: application/json' \
              -H 'Content-Type: application/json' \
              -d '{
              "method": "subbridge_txPending",
              "id": 1,
              "jsonrpc": "2.0",
              "params": []
            }'
  /subbridge/txPendingCount:
    post:
      summary: subbridge_txPendingCount
      tags:
        - subbridge
      operationId: txPendingCount
      description: |
        The subbridge_txPendingCount returns the number of pending transactions in the bridge transaction pool.

        **JSONRPC:** `subbridge_txPendingCount`
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - $ref: '#/components/schemas/SubbridgeTxPendingCountReq'
      responses:
        '200':
          description: The number of pending transactions in the bridge transaction pool.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - $ref: '#/components/schemas/SubbridgeTxPendingCountResp'
      x-codeSamples:
        - lang: curl
          label: Curl
          source: |
            curl -X 'POST' \
              'https://api.baobab.klaytn.net:8651/subbridge/txPendingCount' \
              -H 'accept: application/json' \
              -H 'Content-Type: application/json' \
              -d '{
              "method": "subbridge_txPendingCount",
              "id": 1,
              "jsonrpc": "2.0",
              "params": []
            }'
  /subbridge/unsubscribeBridge:
    post:
      summary: subbridge_unsubscribeBridge
      tags:
        - subbridge
      operationId: unsubscribeBridge
      description: |
        The subbridge_ununsubscribeBridge unsubscribes the sub-bridge from the bridge contracts in the parent and child chains. If the sub-bridge is unsubscribed from the bridge contracts, cross-chain value transfer requests can not be handled by the sub-bridge.

        **JSONRPC:** `subbridge_unsubscribeBridge`
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - $ref: '#/components/schemas/SubbridgeUnsubscribeBridgeReq'
      responses:
        '200':
          description: The subbridge_unsubscribeBridge unsubscribes the sub-bridge from the bridge contracts in the parent and child chains.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - $ref: '#/components/schemas/SubbridgeUnsubscribeBridgeResp'
      x-codeSamples:
        - lang: curl
          label: Curl
          source: |
            curl -X 'POST' \
              'https://api.baobab.klaytn.net:8651/subbridge/unsubscribeBridge' \
              -H 'accept: application/json' \
              -H 'Content-Type: application/json' \
              -d '{
              "method": "subbridge_unsubscribeBridge",
              "id": 1,
              "jsonrpc": "2.0",
              "params": ["0x87d6b9c567e5b84cd00e03bfbe6d20d88209c33a", "0x23dab942822021bbd6d551ef51003208924877e4"]
            }'
  /subbridge/childOperator:
    post:
      summary: subbridge_childOperator
      tags:
        - subbridge
      operationId: childOperator
      description: |
        Returns true if adding a mainbridge peer is done successfully.

        The childOperator method adds a new remote node to the peer list. The node will try to maintain connectivity to these nodes at all times, reconnecting every once in a while if the remote connection goes down.

        The method accepts a single argument, the kni URL of the remote peer to start tracking and returns a BOOL indicating whether the peer was accepted for tracking or some error occurred.

        **JSONRPC:** `subbridge_childOperator`
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - $ref: '#/components/schemas/childOperatorReq'
      responses:
        '200':
          description: true if the peer was accepted, false otherwise.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - $ref: '#/components/schemas/childOperatorResp'
      x-codeSamples: null
  /subbridge/childOperatorBalance:
    post:
      summary: subbridge_childOperatorBalance
      tags:
        - subbridge
      operationId: childOperatorBalance
      description: |
        The subbridge_childOperatorBalance returns the balance of the child operator account.

        **JSONRPC:** `subbridge_childOperatorBalance`
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - $ref: '#/components/schemas/childOperatorBalanceReq'
      responses:
        '200':
          description: Integer of the current balance of the child operator account.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - $ref: '#/components/schemas/childOperatorBalanceResp'
      x-codeSamples: null
  /subbridge/childOperatorNonce:
    post:
      summary: subbridge_childOperatorNonce
      tags:
        - subbridge
      operationId: childOperatorNonce
      description: |
        The subbridge_childOperator returns the child operator account address.

        **JSONRPC:** `subbridge_childOperatorNonce`
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - $ref: '#/components/schemas/childOperatorNonceReq'
      responses:
        '200':
          description: Integer of the number of transactions sent from the child operator account.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - $ref: '#/components/schemas/childOperatorNonceResp'
      x-codeSamples: null
  /subbridge/latestAnchoredBlockNumber:
    post:
      summary: subbridge_latestAnchoredBlockNumber
      tags:
        - subbridge
      operationId: latestAnchoredBlockNumber
      description: |
        The subbridge_latestAnchoredBlockNumber returns the latest anchored block number of the service chain.

        **JSONRPC:** `subbridge_latestAnchoredBlockNumber`
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - $ref: '#/components/schemas/latestAnchoredBlockNumberReq'
      responses:
        '200':
          description: true if the peer was accepted, false otherwise.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - $ref: '#/components/schemas/latestAnchoredBlockNumberResp'
      x-codeSamples: null
  /subbridge/parentOperator:
    post:
      summary: subbridge_parentOperator
      tags:
        - subbridge
      operationId: parentOperator
      description: |
        The subbridge_parentOperator returns the parent operator account address.

        **JSONRPC:** `subbridge_parentOperator`
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - $ref: '#/components/schemas/parentOperatorReq'
      responses:
        '200':
          description: Parent chain operator account address.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - $ref: '#/components/schemas/parentOperatorResp'
      x-codeSamples: null
  /subbridge/parentOperatorBalance:
    post:
      summary: subbridge_parentOperatorBalance
      tags:
        - subbridge
      operationId: parentOperatorBalance
      description: |
        The subbridge_parentOperatorBalance returns the balance of the parent operator account.

        **JSONRPC:** `subbridge_parentOperatorBalance`
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - $ref: '#/components/schemas/parentOperatorBalanceReq'
      responses:
        '200':
          description: Integer of the current balance of the parent operator account.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - $ref: '#/components/schemas/parentOperatorBalanceResp'
      x-codeSamples: null
  /subbridge/parentOperatorNonce:
    post:
      summary: subbridge_parentOperatorNonce
      tags:
        - subbridge
      operationId: parentOperatorNonce
      description: |
        The subbridge_parentOperatorNonce returns the balance of the parent operator account.

        **JSONRPC:** `subbridge_parentOperatorNonce`
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - $ref: '#/components/schemas/parentOperatorNonceReq'
      responses:
        '200':
          description: Integer of the current balance of the parent operator account.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - $ref: '#/components/schemas/parentOperatorNonceResp'
      x-codeSamples: null
  /subbridge/sendChainTxslimit:
    post:
      summary: subbridge_sendChainTxslimit
      tags:
        - subbridge
      operationId: sendChainTxslimit
      description: |
        sendChainTxslimit gets the maximum number of pending transactions to pick up for sending at once.

        **JSONRPC:** `subbridge_sendChainTxslimit`
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JsonRpcRequest'
                - $ref: '#/components/schemas/sendChainTxslimitReq'
      responses:
        '200':
          description: the maximum number of pending transactions to pickup for sending at once.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/JsonRpcResponse'
                  - $ref: '#/components/schemas/sendChainTxslimitResp'
      x-codeSamples: null
components:
  schemas:
    JsonRpcRequest:
      type: object
      required:
        - method
        - id
        - jsonrpc
      properties:
        method:
          type: string
          description: Method name
        id:
          type: integer
          default: 1
          format: int64
          description: Request ID, Random or Auto incrementation
        jsonrpc:
          type: string
          default: '2.0'
          description: JSON-RPC Version (2.0)
        params:
          type: array
          items: {}
    AddPeerReq:
      type: object
      required:
        - method
        - params
      properties:
        method:
          type: string
          default: subbridge_addPeer
        params:
          type: array
          description: Peer's kni URL.
          items:
            type: string
            title: Url
          example:
            - kni://a979fb575495b8d6db44f750317d0f4622bf4c2aa3365d6af7c284339968eef29b69ad0dce72a4d8db5ebb4968de0e3bec910127f134779fbcb0cb6d3331163c@10.0.0.1:50505
    ErrorMember:
      type: object
      title: ErrorMember
      required:
        - code
      properties:
        code:
          type: integer
          format: int64
          example: -32700
          description: |
            A Number that indicates the error type that occurred.
            This MUST be an integer.

            | code | message | description |
            |-----|-----|-------|
            | -32700   | Parse error   | invalid JSON was received by the server. An error occurred on the server while parsing the JSON text. |
            |-32602 | Invalid params | Invalid method parameter(s). |
        message:
          type: string
          example: Parse error
          description: |
            A String providing a short description of the error.
            The message SHOULD be limited to a concise single sentence.
        data:
          type: string
          description: |
            A Primitive or Structured value that contains additional information about the error.
            This may be omitted.
            The value of this member is defined by the Server (e.g. detailed error information, nested errors etc.).
    JsonRpcResponse:
      type: object
      required:
        - jsonrpc
        - id
      properties:
        jsonrpc:
          type: string
          default: '2.0'
        id:
          type: integer
          format: int64
        error:
          $ref: '#/components/schemas/ErrorMember'
        result: {}
    AddPeerResp:
      type: object
      properties:
        result:
          type: boolean
          description: true if the peer was accepted, false otherwise.
          example: true
    AnchoringReq:
      type: object
      required:
        - method
        - params
      properties:
        method:
          type: string
          default: subbridge_anchoring
        params:
          type: array
          description: true enables the anchoring feature, false disables it.
          items:
            type: string
            title: Enable
          example:
            - true
    AnchoringResp:
      type: object
      properties:
        result:
          type: boolean
          description: true if the anchoring was enabled, false otherwise.
          example: true
    ConvertRequestTxHashToHandleTxHashReq:
      type: object
      required:
        - method
        - params
      properties:
        method:
          type: string
          default: subbridge_convertRequestTxHashToHandleTxHash
        params:
          type: array
          description: Hash of a "request value transfer" transaction.
          items:
            type: string
            format: 32-byte DATA
            title: Hash
          example:
            - '0xc585cfd1e7047b4faae69e62e77db192d8a339701b40d6ab4adb58453b934bec'
    ConvertRequestTxHashToHandleTxHashResp:
      type: object
      properties:
        result:
          type: string
          format: 32-byte DATA
          description: Hash of a "handle value transfer" transaction. zero hash means there is no corresponding "handle value transfer" transaction.
          example: '0x0000000000000000000000000000000000000000000000000000000000000000'
    SubbridgeDeployBridgeReq:
      type: object
      required:
        - method
      properties:
        method:
          type: string
          default: subbridge_deployBridge
    SubbridgeDeployBridgeResp:
      type: object
      properties:
        result:
          type: array
          items:
            anyOf:
              - title: ChildAccount
                type: string
                format: 20-byte DATA
                description: Address of bridge contract on child chain.
              - title: ParentAccount
                type: string
                format: 20-byte DATA
                description: Address of bridge contract on parent chain.
          example:
            - '0x87d6b9c567e5b84cd00e03bfbe6d20d88209c33a'
            - '0x23dab942822021bbd6d551ef51003208924877e4'
    Address:
      title: Address
      type: string
      format: 20-byte DATA
      description: Address
    SubbridgeDeregisterBridgeReq:
      type: object
      required:
        - method
        - params
      properties:
        method:
          type: string
          default: subbridge_deregisterBridge
        params:
          type: array
          items:
            properties:
              ChildAccount:
                title: ChildAccount
                type: string
                format: 20-byte DATA
                description: Address of bridge contract on child chain.
              ParentAccount:
                title: ParentAccount
                type: string
                format: 20-byte DATA
                description: Address of bridge contract on parent chain.
          example:
            - '0x87d6b9c567e5b84cd00e03bfbe6d20d88209c33a'
            - '0x23dab942822021bbd6d551ef51003208924877e4'
    SubbridgeDeregisterBridgeResp:
      type: object
      properties:
        result:
          type: string
          example: null
          description: null if the deregistration succeeds, Error object otherwise.
    SubbridgeDeregisterTokenReq:
      type: object
      required:
        - method
        - params
      properties:
        method:
          type: string
          default: subbridge_deregisterToken
        params:
          type: array
          items:
            properties:
              ChildAccount:
                title: ChildAccount
                type: string
                format: 20-byte DATA
                description: Address of bridge contract on child chain.
              ParentAccount:
                title: ParentAccount
                type: string
                format: 20-byte DATA
                description: Address of bridge contract on parent chain.
              TokenChildAccount:
                title: TokenChildAccount
                type: string
                format: 20-byte DATA
                description: Address of token contract on child chain.
              TokenParentAccount:
                title: TokenParentAccount
                type: string
                format: 20-byte DATA
                description: Address of token contract on parent chain.
          example:
            - '0x87d6b9c567e5b84cd00e03bfbe6d20d88209c33a'
            - '0x23dab942822021bbd6d551ef51003208924877e4'
            - '0xA4b0c6e12346426a09FaD70dAE0651E6Dbdd5198'
            - '0x865Cca53828C91663BFf0Ca9808827Bac552BAec'
    SubbridgeDeregisterTokenResp:
      type: object
      properties:
        result:
          type: string
          example: null
          description: null if the deregistration succeeds, Error object otherwise.
    GetBridgeInformationReq:
      type: object
      required:
        - method
        - params
      properties:
        method:
          type: string
          default: subbridge_getBridgeInformation
        params:
          type: array
          items:
            type: string
            title: account
            format: 20-byte DATA
          description: Address of a bridge contract
          example:
            - '0x27caeba831d98b5fbb1d81ce0ed20801702f443a'
    GetBridgeInformationResp:
      type: object
      properties:
        result:
          type: object
          description: the information of the given bridge contract.
          required:
            - counterPart
            - isRunning
            - isSubscribed
            - onServiceChain
            - pendingEventSize
            - requestNonce
            - handleNonce
            - lowerHandleNonce
          properties:
            counterPart:
              type: string
              format: 20-byte DATA
              description: Address of the counterpart bridge contract. (Not supported yet)
            isRunning:
              type: boolean
              description: true if the bridge contract is running, false otherwise.
            isSubscribed:
              type: boolean
              description: true if the bridge contract is subscribed, false otherwise.
            onServiceChain:
              type: boolean
              description: true if the bridge contact is on child (service) chain, false otherwise.
            pendingEventSize:
              type: string
              format: hex
              description: Number of pending "request value transfer" events generated by the bridge contracts, not handled yet by the sub-bridge.
            requestNonce:
              type: string
              format: hex
              description: Request nonce of the bridge contract.
            handleNonce:
              type: string
              format: hex
              description: Upper handle nonce of the bridge contract.
            lowerHandleNonce:
              type: string
              format: hex
              description: Lower handle nonce of the bridge contract.
          example:
            counterPart: '0x0000000000000000000000000000000000000000'
            handleNonce: 0
            lowerHandleNonce: 0
            isRunning: true
            isSubscribed: true
            onServiceChain: true
            pendingEventSize: 0
            requestNonce: 0
    BlockHash:
      title: BlockHash
      type: string
      format: 32-byte DATA
      description: the block hash
    SubbridgeGetReceiptFromParentChainReq:
      type: object
      required:
        - method
        - params
      properties:
        method:
          type: string
          default: subbridge_getReceiptFromParentChain
        params:
          type: array
          items:
            type: string
            format: 32-byte DATA
            description: The child chain block hash that was included the anchoring tx hash.
          example:
            - '0x4f300d6574e71d7940c88fe08f27d9ac45cbc7b81d45c17e848d3772f64377b5'
    SubbridgeGetReceiptFromParentChainResp:
      type: object
      properties:
        result:
          type: object
          description: Object - A transaction receipt object, or null when no receipt was found.
          required:
            - contractAddress
            - gasUsed
            - logs
            - logsBloom
            - status
            - transactionHash
          properties:
            contractAddress:
              type: string
              format: DATA
              description: The contract address created, if the transaction was a contract creation, otherwise null. (will be deprecated)
            gasUsed:
              type: string
              format: hex
              description: The amount of gas used by this specific transaction alone.
            logs:
              type: array
              items:
                type: object
              description: Array of log objects, which this transaction generated.
            logsBloom:
              type: string
              format: 256-byte DATA
              description: Bloom filter for light clients to quickly retrieve related logs.
            status:
              type: string
              format: hex
              description: Either 1 (success) or 0 (failure).
            transactionHash:
              type: string
              format: 32-byte DATA
              description: Hash of the transaction.
          example:
            contractAddress: '0x0000000000000000000000000000000000000000'
            gasUsed: '0x9470'
            logs: []
            logsBloom: '0x
            status: '0x1'
            transactionHash: '0x3641f52359f44ef2a9941ea840aed4befbace5cac28d5cc8cacd94eae211fd1e'
    ListBridgeReq:
      type: object
      required:
        - method
      properties:
        method:
          type: string
          default: subbridge_unsubscribeBridge
    ListBridgeResp:
      type: object
      properties:
        result:
          type: array
          items:
            type: object
            required:
              - localAddress
              - remoteAddress
              - subscribed
            properties:
              localAddress:
                type: string
                format: 20-byte DATA
                title: account
                description: account
              remoteAddress:
                type: string
                format: 20-byte DATA
                title: account
                description: account
              subscribed:
                type: boolean
                description: true if the pair of bridge contracts is subscribed, false otherwise.
          example:
            - localAddress: '0x27caeba831d98b5fbb1d81ce0ed20801702f443a'
              remoteAddress: '0x22c41ae528627b790233d2e59ea520be12350eb5'
              subscribed: true
            - localAddress: '0x376b72abe1b29cace831bd3f5acdfa967814c9cd'
              remoteAddress: '0x53160735f7cc6ff75e48619f368bb94daff66a1b'
              subscribed: false
            - localAddress: '0x87d6b9c567e5b84cd00e03bfbe6d20d88209c33a'
              remoteAddress: '0x23dab942822021bbd6d551ef51003208924877e4'
              subscribed: false
    NodeInfoReq:
      type: object
      required:
        - method
      properties:
        method:
          type: string
          default: subbridge_nodeInfo
    NodeInfoResp:
      type: object
      properties:
        result:
          type: object
          description: The bridge node information.
          example:
            kni: kni://f8a1f0cd1e2bebeece571e4fda16e215218fd4b9bc2eddd924f7cd5b5f950fcec8f4b8cd3851390d1d0bacf1b15e1c4a38c882252e429a28d16eeb6edbacd726@[::]:50505?discport=0
            id: f8a1f0cd1e2bebeece571e4fda16e215218fd4b9bc2eddd924f7cd5b5f950fcec8f4b8cd3851390d1d0bacf1b15e1c4a38c882252e429a28d16eeb6edbacd726
            ip: '::'
            listenAddr: '[::]:50505'
            name: '-2'
            ports:
              discovery: 0
              listener: 50505
            protocols:
              servicechain:
                config:
                  chainId: 2018
                  deriveShaImpl: 0
                  isBFT: true
                  istanbul:
                    ...: null
                  unitPrice: 0
                difficulty: 87860
                genesis: '0x711ce9865492659977abb2758d29f68c2b0c82862d9376f25953579f64f95b58'
                head: '0x0d4b130731f1e7560e4531ac73d55ac8c6daccb178abd86af0d96b7aafded7c5'
                network: 1
    SubbridgeRegisterBridgeReq:
      type: object
      required:
        - method
        - params
      properties:
        method:
          type: string
          default: subbridge_registerBridge
        params:
          type: array
          items:
            properties:
              ChildAccount:
                title: ChildAccount
                type: string
                format: 20-byte DATA
                description: Address of bridge contract on child chain.
              ParentAccount:
                title: ParentAccount
                type: string
                format: 20-byte DATA
                description: Address of bridge contract on parent chain.
          example:
            - '0x87d6b9c567e5b84cd00e03bfbe6d20d88209c33a'
            - '0x23dab942822021bbd6d551ef51003208924877e4'
    SubbridgeRegisterBridgeResp:
      type: object
      properties:
        result:
          type: string
          example: null
          description: null if the registration succeeds, Error object otherwise.
    SubbridgeRegisterTokenReq:
      type: object
      required:
        - method
        - params
      properties:
        method:
          type: string
          default: subbridge_registerToken
        params:
          type: array
          items:
            properties:
              ChildAccount:
                title: ChildAccount
                type: string
                format: 20-byte DATA
                description: Address of bridge contract on child chain.
              ParentAccount:
                title: ParentAccount
                type: string
                format: 20-byte DATA
                description: Address of bridge contract on parent chain.
              TokenChildAccount:
                title: TokenChildAccount
                type: string
                format: 20-byte DATA
                description: Address of token contract on child chain.
              TokenParentAccount:
                title: TokenParentAccount
                type: string
                format: 20-byte DATA
                description: Address of token contract on parent chain.
          example:
            - '0x87d6b9c567e5b84cd00e03bfbe6d20d88209c33a'
            - '0x23dab942822021bbd6d551ef51003208924877e4'
            - '0xA4b0c6e12346426a09FaD70dAE0651E6Dbdd5198'
            - '0x865Cca53828C91663BFf0Ca9808827Bac552BAec'
    SubbridgeRegisterTokenResp:
      type: object
      properties:
        result:
          type: string
          example: null
          description: null if the registration succeeds, Error object otherwise.
    RemovePeerReq:
      type: object
      required:
        - method
        - params
      properties:
        method:
          type: string
          default: subbridge_removePeer
        params:
          type: array
          description: Peer's kni URL.
          items:
            type: string
            title: Url
          example:
            - kni://a979fb575495b8d6db44f750317d0f4622bf4c2aa3365d6af7c284339968eef29b69ad0dce72a4d8db5ebb4968de0e3bec910127f134779fbcb0cb6d3331163c@10.0.0.1:50505
    RemovePeerResp:
      type: object
      properties:
        result:
          type: boolean
          description: true if the peer was removed, false otherwise.
          example: true
    SubbridgeSubscribeBridgeReq:
      type: object
      required:
        - method
        - params
      properties:
        method:
          type: string
          default: subbridge_subscribeBridge
        params:
          type: array
          items:
            properties:
              ChildAccount:
                title: ChildAccount
                type: string
                format: 20-byte DATA
                description: Address of bridge contract on child chain.
              ParentAccount:
                title: ParentAccount
                type: string
                format: 20-byte DATA
                description: Address of bridge contract on parent chain.
          example:
            - '0x87d6b9c567e5b84cd00e03bfbe6d20d88209c33a'
            - '0x23dab942822021bbd6d551ef51003208924877e4'
    SubbridgeSubscribeBridgeResp:
      type: object
      properties:
        result:
          type: string
          example: null
    SubbridgeTxPendingReq:
      type: object
      required:
        - method
      properties:
        method:
          type: string
          default: subbridge_txPending
    SubbridgeTxPendingResp:
      type: object
      properties:
        result:
          type: object
          description: List of pending transactions in the bridge transaction pool.
          example:
            '0xa057995175b93ee0d1bdfa54f078ad0f0116130b':
              - from: '0xa057995175b93ee0d1bdfa54f078ad0f0116130b'
                gas: '0x186a0'
                gasPrice: '0x5d21dba00'
                hash: '0x284c8f5bc82ef987c3a14fc8dac7933beb528777745987ff790014441f26ca03'
                input: '0xf8a9a063f41a6ec8e2f8074c30fccf11f2b8479e7ebd8a0e5aa0c171623bc1f3812e33a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a0f845557d8dc2175974f29c2e9d12b1a57f634acaafdf56ae7033201a0796bedea056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a09109530b191b47ca3d91012faba70fcf307f13b030f19d932cab38f2c1ece7b78304157c'
                nonce: '0x41589'
                signatures:
                  - ...: null
                type: TxTypeChainDataAnchoring
                typeInt: 72
              - from: '0xa057995175b93ee0d1bdfa54f078ad0f0116130b'
                gas: '0x186a0'
                gasPrice: '0x5d21dba00'
                hash: '0x4dd093916a419608091da28b5d7ffc6e34d894ddaac96328f1904bfef93a4ad0'
                input: '0xf8a9a05b0dd6cc938916e37b17b602690399987b4e8540a14a494626d85e947f721a10a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a063f41a6ec8e2f8074c30fccf11f2b8479e7ebd8a0e5aa0c171623bc1f3812e33a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a09109530b191b47ca3d91012faba70fcf307f13b030f19d932cab38f2c1ece7b78304157d'
                nonce: '0x4158a'
                signatures:
                  - ...: null
                type: TxTypeChainDataAnchoring
                typeInt: 72
    SubbridgeTxPendingCountReq:
      type: object
      required:
        - method
      properties:
        method:
          type: string
          default: subbridge_txPendingCount
    SubbridgeTxPendingCountResp:
      type: object
      properties:
        result:
          type: integer
          format: uint64
          description: The number of pending transactions in the bridge transaction pool.
          example: 2
    SubbridgeUnsubscribeBridgeReq:
      type: object
      required:
        - method
        - params
      properties:
        method:
          type: string
          default: subbridge_unsubscribeBridge
        params:
          type: array
          items:
            properties:
              ChildAccount:
                title: ChildAccount
                type: string
                format: 20-byte DATA
                description: Address of bridge contract on child chain.
              ParentAccount:
                title: ParentAccount
                type: string
                format: 20-byte DATA
                description: Address of bridge contract on parent chain.
          example:
            - '0x87d6b9c567e5b84cd00e03bfbe6d20d88209c33a'
            - '0x23dab942822021bbd6d551ef51003208924877e4'
    SubbridgeUnsubscribeBridgeResp:
      type: object
      properties:
        result:
          type: string
          example: null
    childOperatorReq:
      type: object
      required:
        - method
      properties:
        method:
          type: string
          default: subbridge_childOperator
    childOperatorResp:
      type: object
      properties:
        result:
          type: string
          description: Child chain operator account address.
          example: '0x5C1C757a6Cb6c6FcEFE398674D8209FDA2A74Df4'
    childOperatorBalanceReq:
      type: object
      required:
        - method
      properties:
        method:
          type: string
          default: subbridge_childOperatorBalance
    childOperatorBalanceResp:
      type: object
      properties:
        result:
          type: number
          description: Integer of the current balance of the child operator account.
          example: 1e+50
    childOperatorNonceReq:
      type: object
      required:
        - method
      properties:
        method:
          type: string
          default: subbridge_childOperatorNonce
    childOperatorNonceResp:
      type: object
      properties:
        result:
          type: number
          description: Integer of the number of transactions sent from the child operator account.
          example: 1024
    latestAnchoredBlockNumberReq:
      type: object
      required:
        - method
      properties:
        method:
          type: string
          default: subbridge_latestAnchoredBlockNumber
    latestAnchoredBlockNumberResp:
      type: object
      properties:
        result:
          type: number
          description: The latest anchored block number.
          example: 71025
    parentOperatorReq:
      type: object
      required:
        - method
      properties:
        method:
          type: string
          default: subbridge_parentOperator
    parentOperatorResp:
      type: object
      properties:
        result:
          type: string
          description: Parent chain operator account address.
          example: '0xA057995175B93Ee0D1bdfA54f078Ad0F0116130b'
    parentOperatorBalanceReq:
      type: object
      required:
        - method
      properties:
        method:
          type: string
          default: subbridge_parentOperatorBalance
    parentOperatorBalanceResp:
      type: object
      properties:
        result:
          type: number
          description: Integer of the current balance of the parent operator account.
          example: 1e+50
    parentOperatorNonceReq:
      type: object
      required:
        - method
      properties:
        method:
          type: string
          default: subbridge_parentOperatorNonce
    parentOperatorNonceResp:
      type: object
      properties:
        result:
          type: number
          description: Integer of the number of transactions sent from the parent operator account.
          example: 1348
    sendChainTxslimitReq:
      type: object
      required:
        - method
      properties:
        method:
          type: string
          default: subbridge_sendChainTxslimit
    sendChainTxslimitResp:
      type: object
      properties:
        result:
          type: number
          description: the maximum number of pending transactions to pickup for sending at once.
          example: 100
